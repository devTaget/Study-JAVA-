JAVA - 프로그래밍 언어
   프로그래밍 언어는 개발자와 컴퓨터가 소통하기 위한 언어이다.

소스코드
   명령어를 작성해 놓은 것.
   개발자와 컴퓨터가 소통할 것을 글로 작성해 놓은 것.

소스파일
   소스코드가 작성되어 있는 파일.

컴파일
   사람의 언어를 컴퓨터 언어로 바꿔주는 작업.

컴파일러
   컴파일을 해주는 프로그램 또는 명령어.

컴파일러 해석 방향
   위에서 아래로 좌에서 우로 번역.

콘솔
   개발자와 운영체제가 소통한 결과를 보여주는 창.

프로그램
   소스코드로 잘 짜여진 틀.

▶ 일반 프로그램

   프로그램
   OS(운영체제): 하드웨어에 적절한 전기신호를 흘려주는 역할.
   하드웨어

   - 일반 프로그램은 이식성이 좋지 않다.

▶ JAVA 프로그램

   프로그램
   JVM: JAVA 프로그램을 OS에 맞게 번역한다.
   OS
   하드웨어
   
   - JAVA 프로그램은 이식성이 좋다.
-------------------------------------------------------------------------------------
JVM(Java Virtual Machine)
   JAVA 프로그램을 실행해 줌.

JRE(Java Runtime Environment)
   JVM을 생성하며, 실행할 때 필요한 라이브러리 파일들을 가지고 있다.

JDK(Java Development Kit)
   JRE외에 개발에 필요한 도구들을 가지고 있다.
   컴파일 명령어와 실행 명령어를 담고 있다.
-------------------------------------------------------------------------------------
JDK 설치 - 11버전
ttps://drive.google.com/file/d/1uXJrIxuM95KTSjF-fxGos7pHsbknkVIZ/view?usp=share_link
   설치가 이미 되어 있는 지 확인
   C:\Java\jdk-11.0.16로 설치
   환경변수 설정 후
   CMD에서 java, javac 명령어 확인

IDE(통합 개발 환경)
   - eclipse
   - intellij

▷ 이클립스 설치
https://drive.google.com/file/d/1ZIVbjwsAvTyUw9ivb2SE3MVpAYiysgcf/view?usp=share_link
========================================================================================
기본 구조
   프로젝트
      패키지
         클래스(대문자)
            메소드(이름 뒤에 소괄호)
               소스코드
========================================================================================
출력 메소드
   print(): 마지막에 자동으로 줄바꿈이 되지 않고 아래의 문장과 이어서 출력된다.
   println(): 마지막에 자동으로 줄바꿈된다.
   printf()

출력 메소드 목적
   전달받은 데이터 및 전달할 데이터 검사, 오류 발생 지점 구체화 및 검사
========================================================================================
변수 : 저장공간

   x   =   10
     저장공간의   대입   값
   이름   연산자

자료형(type, 종류)

   자료형   type   byte   값

   정수형   int   4   10, 32, 543, -32, 2147483647, ...
   실수형   float   4   10.5F, -0.9F, 0.0F, 123.4563F, ...
      double   8   10.5, -0.9, 0.0, 123.4563, ...
   문자형   char   2   '강', '일', '1', '0', '-', ...
   문자열   String   ?   "0", "0.0", "1", "A", "ABC", "안녕~~~", ...

변수의 선언
   type name = value;
   
   예)
   int x = 10;
   x라는 이름의 저장공간이 할당(allocation)되고 그 안에 10이 들어간다.


RAM(메모리)
================
OS Kernel Space   - 드라이버
================
Stack      - 지역변수, 매개변수
----------------
Free
----------------
Heap      - 동적 메모리
================
BSS      - 초기화되지 않은 전역변수
================
Data 영역   - 전역변수, 정적변수
================
Text 영역   - 상수, 코드
================

   int x = 10;
   x라는 이름의 저장공간이 RAM에 할당되고 10이라는 값이 들어간다.

주소(해시코드)
   int x = 10;
   x라는 이름의 저장공간이 RAM에 할당되면 고유한 값인 주소값이 부여된다.
   계속 실행되거나 종료되는 프로그램이 있기 때문에, 주소값을 변경될 수 있으나
   중복은 없다.

------------------------------------------------------------------------------------














